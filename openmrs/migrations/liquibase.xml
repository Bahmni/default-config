<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

        <changeSet id="HAITI_CONFIG_260620192304" author="Pritam">
          <comment>Stored Procedure to add concept</comment>
          <sqlFile path="addConceptProcedure.sql" endDelimiter="#"/>
        </changeSet>
        <changeSet id="HAITI_CONFIG_201906270015" author="Pritam">
          <comment>Stored Procedure to add concept answer</comment>
          <sqlFile path="addConceptAnswerProcedure.sql" endDelimiter="#"/>
        </changeSet>
        <changeSet id="HAITI_CONFIG_201907021542" author="Pritam">
          <comment>Stored Procedure to add reference term</comment>
          <sqlFile path="createReferenceMappingORGOPENMRSMODULEEMRAPI.sql" endDelimiter="#"/>
        </changeSet>
        <changeSet id="HAITI_CONFIG_260620192058" author="Pritam">
          <comment>Deleting all bed location tags and bed location maps</comment>
          <sqlFile path="bedManagement/clearBedLayout.sql"/>
        </changeSet>
        <changeSet id="HAITI_CONFIG_260620192059" author="Pritam">
          <comment>Stored Procedure to insert beds into locations</comment>
          <sqlFile path="bedManagement/insertBedIntoLocationStoredProcedure.sql" endDelimiter="#"/>
        </changeSet>
        <changeSet id="HAITI_CONFIG_110720191921" author="Vineela">
           <comment>Adding global property for patient movement history display control</comment>
           <sqlFile path="bedManagement/patientMovementHistoryDisplayControl.sql"/>
         </changeSet>
        <changeSet id="HAITI_CONFIG_120720191053" author="Sreekalyan">
            <comment>Updating global.property with regular expression for Patient names</comment>
                <sql>
                    update global_property set property_value='^[a-zA-ZâÂàÀäÄçÇéÉèÈêÊëËîÎïÏôÔùÙûÛüÜÿñÑœŒÆæ\'_ ]{1,50}$.*$' where property='patient.nameValidationRegex';
                </sql>
        </changeSet>
        <changeSet id="HAITI_CONFIG_201907151130" author="Bindu, Alekhya">
            <comment>Stored Procedure to create users and assign bed management and registration roles</comment>
            <sqlFile path="bedManagement/createBedManagementUserProcedure.sql" endDelimiter="#"/>
        </changeSet>
        <changeSet id="HAITI_CONFIG_201907161600" author="Bindu">
            <comment>Removing Retrospective privilege for all the users in Bahmni</comment>
            <sql>
                delete from role_privilege where privilege in('app:clinical:locationpicker', 'app:clinical:onbehalf', 'app:clinical:retrospective');
            </sql>
        </changeSet>
        <include file ="bedManagement/addBedManagementModule.xml"/>
        <include file="bedManagement/createBedManagementUsers.xml"/>
    <changeSet id="IRAQ-201907181133" author="SreeKalyan">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="6">
                select
                count(*)
                from
                location l
                INNER JOIN location_tag_map ltm on l.location_id = ltm.location_id and l.retired = 0
                INNER JOIN location_tag lt on ltm.location_tag_id = lt.location_tag_id
                where lt.name = 'Visit Location'
            </sqlCheck>
        </preConditions>
        <comment>Removing visit location mapping from Ambulatoire,Bloc Opératoire,Hospitalisation,Service BMR,Soins Intensifs,Urgences </comment>
        <sql>
            select location_id Into @location_id1 from location where name = 'Ambulatoire' and retired = 0;
            select location_id Into @location_id2 from location where name = 'Bloc Opératoire' and retired = 0;
            select location_id Into @location_id3 from location where name = 'Hospitalisation' and retired = 0;
            select location_id Into @location_id4 from location where name = 'Service BMR' and retired = 0;
            select location_id Into @location_id5 from location where name = 'Soins Intensifs' and retired = 0;
            select location_id Into @location_id6 from location where name = 'Urgences' and retired = 0;
            SELECT location_tag_id into @location_tag_id from location_tag where name = 'Visit Location';

            delete from location_tag_map where location_id = @location_id1    and location_tag_id = @location_tag_id;
            delete from location_tag_map where location_id = @location_id2    and location_tag_id = @location_tag_id;
            delete from location_tag_map where location_id = @location_id3    and location_tag_id = @location_tag_id;
            delete from location_tag_map where location_id = @location_id4    and location_tag_id = @location_tag_id;
            delete from location_tag_map where location_id = @location_id5    and location_tag_id = @location_tag_id;
            delete from location_tag_map where location_id = @location_id6    and location_tag_id = @location_tag_id;
        </sql>
    </changeSet>
    <changeSet id="IRAQ-201907181134" author="SreeKalyan">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                select count(*) from location where name = 'Parent location' and  parent_location is null;
            </sqlCheck>
        </preConditions>
        <comment>Create Parent  location  and map to visit location</comment>
        <sql>
            INSERT INTO location (name, description, retired, uuid, date_created, creator) VALUES ('Parent location', 'Parentlocation', FALSE, uuid(), NOW(), 1);

            SELECT location_tag_id INTO @location_tag_id FROM location_tag WHERE name = 'Visit Location';
            SELECT location_id INTO @location_id1 FROM location WHERE location.name='Parent location';

            INSERT INTO location_tag_map(location_id, location_tag_id) VALUES(@location_id1, @location_tag_id);
        </sql>
    </changeSet>
    <changeSet id="IRAQ-201907181135" author="Sreekalyan">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="3">
                select count(*) from location where name in('Ambulatoire','Bloc Opératoire','Urgences') and  parent_location is null;
            </sqlCheck>
        </preConditions>
        <comment>Mapping to parent location </comment>
        <sql>
            SELECT location_id INTO @location_id1 FROM location WHERE location.name='Patient location';
            update location set parent_location = @location_id1 where `name` = 'Ambulatoire';
            update location set parent_location = @location_id1 where `name` = 'Bloc Opératoire';
            update location set parent_location = @location_id1 where `name` = 'Urgences';
            update location set parent_location = @location_id1 where `name` = 'Services d\'Hospitalisation';
        </sql>
    </changeSet>
    <changeSet id="IRAQ-201907180248" author="Sreekalyan">
    <comment>Mapping already existing patient locationid to the newly created visit location's location id </comment>
        <sql>
            update visit set location_id =(select location_id from location where name='Parent location');
        </sql>
    </changeSet>
    <include file="bedManagement/updatingBedManagementQueueForTranslation.xml"/>
    <changeSet id="HAITI_CONFIG_2019070311238" author="Pritam">
      <comment>Stored Procedure to add CEIL reference term</comment>
      <sqlFile path="createReferenceMappingForCEIL.sql" endDelimiter="#"/>
    </changeSet>
    <include file="vitalSigns/vitalSignsForm.xml"/>
    <include file="AnesthesieConsultatioinitiale/AnesthesieConsultatioinitiale.xml"/>
    <include file="anesthesieNotesPostOperatoir/anesthesieNotesPostOperatoir.xml"/>
</databaseChangeLog>
